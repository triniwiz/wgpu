// language: metal1.0
#include <metal_stdlib>
#include <simd/simd.h>

using metal::uint;


void fb1_(
    thread bool& cond
) {
    bool loop_init = true;
    while(true) {
        if (!loop_init) {
            bool _e1 = cond;
            if (!(cond)) {
                break;
            }
        }
        loop_init = false;
        continue;
#define LOOP_IS_BOUNDED { volatile bool unpredictable_break_from_loop = false; if (unpredictable_break_from_loop) break; }
        LOOP_IS_BOUNDED
    }
    return;
}

void main_1(
) {
    bool param = {};
    param = false;
    fb1_(param);
    return;
}

fragment void main_(
) {
    main_1();
}
